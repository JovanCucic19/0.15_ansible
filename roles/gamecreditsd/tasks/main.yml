- name: Install the gamecreditsd client prerequisites
  apt: name={{item}} update_cache=yes state=present
  with_items:
    - build-essential
    - libtool
    - autotools-dev
    - automake
    - pkg-config
    - libssl-dev
    - libevent-dev
    - bsdmainutils
    - libboost-system-dev
    - libboost-filesystem-dev
    - libboost-chrono-dev
    - libboost-program-options-dev
    - libboost-test-dev
    - libboost-thread-dev
    - software-properties-common
  become: True

- name: Add bitcoin ppa
  apt_repository:
    repo: 'ppa:bitcoin/bitcoin'
  become: True  

- name: Update packages
  become: True
  apt:
    update_cache: yes

- name: Install libdb4.8-dev libdb4.8++-dev
  apt: name={{item}} update_cache=yes state=present
  with_items:
    - libdb4.8-dev
    - libdb4.8++-dev
  become: True

- name: Install supervisor
  apt: name=supervisor update_cache=yes state=present
  become: True

- name: Clone the GameCredits repository
  git: >
    dest=~/gamecredits
    repo=https://github.com/gamecredits-project/GameCredits

- name: Run autogen
  command: ./autogen.sh
  args:
    chdir: ~/gamecredits

- name: Run configure
  command: "./configure"
  args:
    chdir: ~/gamecredits

- name: Compile the wallet
  command: make
  args:
    chdir: ~/gamecredits
    creates: ~/gamecredits/src/gamecreditsd
  ignore_errors: yes

- name: Create the data directory
  file: path=~/.gamecredits state=directory

- name: Copy the default gamecredits.conf file
  template: src=templates/gamecredits.conf dest=~/.gamecredits/gamecredits.conf

- name: Create the logs directory
  file: path=/var/log/gamecreditsd state=directory
  become: True

- name: Copy the supervisor startup file
  template: src=templates/gamecreditsd-supervisor.conf dest=/etc/supervisor/conf.d/gamecredits-supervisor.conf
  become: True

- name: Update supervisorctl
  command: "supervisorctl update"
  become: True

- name: Restart the gamecreditsd service
  supervisorctl: name=gamecreditsd state=restarted
  become: True

- name: Get supervisorctl status
  command: "supervisorctl status"
  register: supervisor_output
  become: True

- name: Debug
  debug: var=supervisor_output

- name: Fail the play if the previous command did not succeed
  fail: msg="Some of the supervisor services failed to start"
  when: "'FATAL' in supervisor_output.stdout or 'BACKOFF' in supervisor_output.stdout"